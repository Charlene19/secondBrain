<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>machinelearning on My Zettelkasten</title>
    <link>https://charlene19.github.io/secondBrain/tags/machinelearning/</link>
    <description>Recent content in machinelearning on My Zettelkasten</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 22 Mar 2021 00:00:00 +0100</lastBuildDate><atom:link href="https://charlene19.github.io/secondBrain/tags/machinelearning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Premiere compétition Kaggle</title>
      <link>https://charlene19.github.io/secondBrain/posts/20210322115253-premiere/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0100</pubDate>
      
      <guid>https://charlene19.github.io/secondBrain/posts/20210322115253-premiere/</guid>
      <description>Les consignes :
 1- Build a Random Forest model with all of your data (X and y). 2- Read in the &amp;ldquo;test&amp;rdquo; data, which doesn&amp;rsquo;t include values for the target. Predict home values in the test data with your Random Forest model. 3- Submit those predictions to the competition and see your score. 4- Optionally, come back to see if you can improve your model by adding features or changing your model.</description>
    </item>
    
    <item>
      <title>Projet &#39;Recognizer emotional&#39;</title>
      <link>https://charlene19.github.io/secondBrain/posts/20210317141628-projet/</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 +0100</pubDate>
      
      <guid>https://charlene19.github.io/secondBrain/posts/20210317141628-projet/</guid>
      <description>Projet construit à partir de cet article. Je ne sais pour l&amp;rsquo;instant pas quelle liberté je prendrais par rapport à lui. Les librairies : Librosa, SoundFile, NumPy, Scikit-Learn.
En premier lieu, j&amp;rsquo;ai dû télécharger des samples de données, en l&amp;rsquo;occurence des voix sur kagle. Puis définir un dictionnaire de données dans mon fichier. Afin de tester et faire progresser au mieux mon programme, j&amp;rsquo;ai sélectionné 3 émotions.
emotion_labels = { &#39;01&#39;: &#39;neutral&#39;, &#39;02&#39;: &#39;calm&#39;, &#39;03&#39;: &#39;happy&#39;, &#39;04&#39;: &#39;sad&#39;, &#39;05&#39;: &#39;angry&#39;, &#39;06&#39;: &#39;fearful&#39;, &#39;07&#39;: &#39;disgust&#39;, &#39;08&#39;: &#39;surprised&#39; } focused_emotion_labels = [&#39;happy&#39;, &#39;sad&#39;, &#39;angry&#39;] Extraction</description>
    </item>
    
    <item>
      <title>Regex</title>
      <link>https://charlene19.github.io/secondBrain/posts/20210309105325-regex/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0100</pubDate>
      
      <guid>https://charlene19.github.io/secondBrain/posts/20210309105325-regex/</guid>
      <description>[[./regx1.png]
[[./regx2.png]
[[./regx3.png]
Le cours sur les regex en Java est vraiment bien fait mais il me semble qu&amp;rsquo;il y en a un autre généraliste.
Par exemple sur le code wikiCrawlers :
L&amp;rsquo;auteur1 dit qu&amp;rsquo;il y a trois choses en communs :
 • They reside within the div with the id set to bodyContent . • The URLs do not contain colons. • The URLs begin with wiki.
 Ce qui nous permet de définir notre regex :</description>
    </item>
    
    <item>
      <title>Loss</title>
      <link>https://charlene19.github.io/secondBrain/posts/20210305103616-loss/</link>
      <pubDate>Mon, 01 Mar 2021 19:47:46 +0100</pubDate>
      
      <guid>https://charlene19.github.io/secondBrain/posts/20210305103616-loss/</guid>
      <description>:MachineLearning:
En apprentissage supervisé, c&amp;rsquo;est la notion de perte d&amp;rsquo;information qui est très imortante. Puisque c&amp;rsquo;est cette perte qu&amp;rsquo;il va falloir ramener au minimum.
 L&amp;rsquo;apprentissage se résume en fait souvent à une méthode itérative qui converge vers un minimum de cette fonction.
 L&amp;rsquo;erreur ou le rique
L&amp;rsquo;erreur quadratique, c&amp;rsquo;est la distance euclidienne entre un point et un modèle.
Le risque empirique : c&amp;rsquo;est le calcul de la somme de toutes les erreurs entre la résultante et le modèle.</description>
    </item>
    
    <item>
      <title>Introduction Machine Learning Python</title>
      <link>https://charlene19.github.io/secondBrain/posts/20210303180254-tutoml_introduction_machine_learning_python/</link>
      <pubDate>Mon, 01 Feb 2021 19:47:46 +0100</pubDate>
      
      <guid>https://charlene19.github.io/secondBrain/posts/20210303180254-tutoml_introduction_machine_learning_python/</guid>
      <description>J&amp;rsquo;ai installé : sklearn et jupyter sur PyCharm
Un processus stochastique ou processus aléatoire (voir Calcul stochastique) ou fonction aléatoire (voir Probabilité) représente une évolution, discrète ou à temps continu, d&amp;rsquo;une variable aléatoire. Celle-ci intervient dans le calcul classique des probabilités, où elle mesure chaque résultat possible (ou réalisation) d&amp;rsquo;une épreuve.
Cette notion se généralise à plusieurs dimensions. Un cas particulier important, le champ aléatoire de Markov, est utilisé en analyse spatiale.</description>
    </item>
    
    <item>
      <title>Q Learning</title>
      <link>https://charlene19.github.io/secondBrain/posts/20210320144329-q/</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0100</pubDate>
      
      <guid>https://charlene19.github.io/secondBrain/posts/20210320144329-q/</guid>
      <description>Technique d&amp;rsquo;apprentissage qui ne nécessite aucun modèle initial de l&amp;rsquo;environnement.
 Un des points forts du {\displaystyle Q}Q-learning est qu&amp;rsquo;il permet de comparer les récompenses probables de prendre les actions accessibles sans avoir de connaissance initiale de l’environnement. En d&amp;rsquo;autres termes, bien que le système soit modélisé par un processus de décision markovien (fini), l&amp;rsquo;agent qui apprend ne le connait pas et l&amp;rsquo;algorithme du {\displaystyle Q}Q-learning ne l&amp;rsquo;utilise pas.
 Définition formelle :</description>
    </item>
    
  </channel>
</rss>
